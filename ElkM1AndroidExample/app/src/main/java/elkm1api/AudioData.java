/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package elkm1api;

public class AudioData {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected AudioData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AudioData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ElkM1APIJNI.delete_AudioData(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setZoneIsOn(boolean value) {
    ElkM1APIJNI.AudioData_zoneIsOn_set(swigCPtr, this, value);
  }

  public boolean getZoneIsOn() {
    return ElkM1APIJNI.AudioData_zoneIsOn_get(swigCPtr, this);
  }

  public void setLoudness(boolean value) {
    ElkM1APIJNI.AudioData_loudness_set(swigCPtr, this, value);
  }

  public boolean getLoudness() {
    return ElkM1APIJNI.AudioData_loudness_get(swigCPtr, this);
  }

  public void setDoNotDisturb(boolean value) {
    ElkM1APIJNI.AudioData_doNotDisturb_set(swigCPtr, this, value);
  }

  public boolean getDoNotDisturb() {
    return ElkM1APIJNI.AudioData_doNotDisturb_get(swigCPtr, this);
  }

  public void setSource(int value) {
    ElkM1APIJNI.AudioData_source_set(swigCPtr, this, value);
  }

  public int getSource() {
    return ElkM1APIJNI.AudioData_source_get(swigCPtr, this);
  }

  public void setVolume(int value) {
    ElkM1APIJNI.AudioData_volume_set(swigCPtr, this, value);
  }

  public int getVolume() {
    return ElkM1APIJNI.AudioData_volume_get(swigCPtr, this);
  }

  public void setBass(int value) {
    ElkM1APIJNI.AudioData_bass_set(swigCPtr, this, value);
  }

  public int getBass() {
    return ElkM1APIJNI.AudioData_bass_get(swigCPtr, this);
  }

  public void setTreble(int value) {
    ElkM1APIJNI.AudioData_treble_set(swigCPtr, this, value);
  }

  public int getTreble() {
    return ElkM1APIJNI.AudioData_treble_get(swigCPtr, this);
  }

  public void setBalance(int value) {
    ElkM1APIJNI.AudioData_balance_set(swigCPtr, this, value);
  }

  public int getBalance() {
    return ElkM1APIJNI.AudioData_balance_get(swigCPtr, this);
  }

  public void setPartyMode(AudioData.PartyMode value) {
    ElkM1APIJNI.AudioData_partyMode_set(swigCPtr, this, value.swigValue());
  }

  public AudioData.PartyMode getPartyMode() {
    return AudioData.PartyMode.swigToEnum(ElkM1APIJNI.AudioData_partyMode_get(swigCPtr, this));
  }

  public AudioData() {
    this(ElkM1APIJNI.new_AudioData(), true);
  }

  public final static class PartyMode {
    public final static AudioData.PartyMode PARTYMODE_OFF = new AudioData.PartyMode("PARTYMODE_OFF");
    public final static AudioData.PartyMode PARTYMODE_ON = new AudioData.PartyMode("PARTYMODE_ON");
    public final static AudioData.PartyMode PARTYMODE_MASTER = new AudioData.PartyMode("PARTYMODE_MASTER");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static PartyMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + PartyMode.class + " with value " + swigValue);
    }

    private PartyMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private PartyMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private PartyMode(String swigName, PartyMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static PartyMode[] swigValues = { PARTYMODE_OFF, PARTYMODE_ON, PARTYMODE_MASTER };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
