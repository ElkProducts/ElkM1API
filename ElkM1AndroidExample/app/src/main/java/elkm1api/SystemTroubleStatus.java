/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package elkm1api;

public class SystemTroubleStatus {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SystemTroubleStatus(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SystemTroubleStatus obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ElkM1APIJNI.delete_SystemTroubleStatus(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setACFail(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_ACFail_set(swigCPtr, this, value);
  }

  public boolean getACFail() {
    return ElkM1APIJNI.SystemTroubleStatus_ACFail_get(swigCPtr, this);
  }

  public void setBoxTamper(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_boxTamper_set(swigCPtr, this, value);
  }

  public boolean getBoxTamper() {
    return ElkM1APIJNI.SystemTroubleStatus_boxTamper_get(swigCPtr, this);
  }

  public void setCommunicationError(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_communicationError_set(swigCPtr, this, value);
  }

  public boolean getCommunicationError() {
    return ElkM1APIJNI.SystemTroubleStatus_communicationError_get(swigCPtr, this);
  }

  public void setEEPROMError(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_EEPROMError_set(swigCPtr, this, value);
  }

  public boolean getEEPROMError() {
    return ElkM1APIJNI.SystemTroubleStatus_EEPROMError_get(swigCPtr, this);
  }

  public void setLowBattery(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_lowBattery_set(swigCPtr, this, value);
  }

  public boolean getLowBattery() {
    return ElkM1APIJNI.SystemTroubleStatus_lowBattery_get(swigCPtr, this);
  }

  public void setOverCurrent(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_overCurrent_set(swigCPtr, this, value);
  }

  public boolean getOverCurrent() {
    return ElkM1APIJNI.SystemTroubleStatus_overCurrent_get(swigCPtr, this);
  }

  public void setTelephoneFault(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_telephoneFault_set(swigCPtr, this, value);
  }

  public boolean getTelephoneFault() {
    return ElkM1APIJNI.SystemTroubleStatus_telephoneFault_get(swigCPtr, this);
  }

  public void setOutput2(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_output2_set(swigCPtr, this, value);
  }

  public boolean getOutput2() {
    return ElkM1APIJNI.SystemTroubleStatus_output2_get(swigCPtr, this);
  }

  public void setMissingKeypad(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_missingKeypad_set(swigCPtr, this, value);
  }

  public boolean getMissingKeypad() {
    return ElkM1APIJNI.SystemTroubleStatus_missingKeypad_get(swigCPtr, this);
  }

  public void setZoneExpander(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_zoneExpander_set(swigCPtr, this, value);
  }

  public boolean getZoneExpander() {
    return ElkM1APIJNI.SystemTroubleStatus_zoneExpander_get(swigCPtr, this);
  }

  public void setOutputExpander(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_outputExpander_set(swigCPtr, this, value);
  }

  public boolean getOutputExpander() {
    return ElkM1APIJNI.SystemTroubleStatus_outputExpander_get(swigCPtr, this);
  }

  public void setRPRemoteAccess(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_RPRemoteAccess_set(swigCPtr, this, value);
  }

  public boolean getRPRemoteAccess() {
    return ElkM1APIJNI.SystemTroubleStatus_RPRemoteAccess_get(swigCPtr, this);
  }

  public void setCommonAreaNotArmed(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_commonAreaNotArmed_set(swigCPtr, this, value);
  }

  public boolean getCommonAreaNotArmed() {
    return ElkM1APIJNI.SystemTroubleStatus_commonAreaNotArmed_get(swigCPtr, this);
  }

  public void setFlashMemoryError(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_flashMemoryError_set(swigCPtr, this, value);
  }

  public boolean getFlashMemoryError() {
    return ElkM1APIJNI.SystemTroubleStatus_flashMemoryError_get(swigCPtr, this);
  }

  public void setSecurityAlert(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_securityAlert_set(swigCPtr, this, value);
  }

  public boolean getSecurityAlert() {
    return ElkM1APIJNI.SystemTroubleStatus_securityAlert_get(swigCPtr, this);
  }

  public void setSerialPortExpander(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_serialPortExpander_set(swigCPtr, this, value);
  }

  public boolean getSerialPortExpander() {
    return ElkM1APIJNI.SystemTroubleStatus_serialPortExpander_get(swigCPtr, this);
  }

  public void setLostTransmitter(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_lostTransmitter_set(swigCPtr, this, value);
  }

  public boolean getLostTransmitter() {
    return ElkM1APIJNI.SystemTroubleStatus_lostTransmitter_get(swigCPtr, this);
  }

  public void setGESmokeCleanMe(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_GESmokeCleanMe_set(swigCPtr, this, value);
  }

  public boolean getGESmokeCleanMe() {
    return ElkM1APIJNI.SystemTroubleStatus_GESmokeCleanMe_get(swigCPtr, this);
  }

  public void setEthernet(boolean value) {
    ElkM1APIJNI.SystemTroubleStatus_ethernet_set(swigCPtr, this, value);
  }

  public boolean getEthernet() {
    return ElkM1APIJNI.SystemTroubleStatus_ethernet_get(swigCPtr, this);
  }

  public SystemTroubleStatus() {
    this(ElkM1APIJNI.new_SystemTroubleStatus(), true);
  }

}
